/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pbn_ocr;

import java.awt.FileDialog;
import java.io.File;
import java.io.FilenameFilter;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import javax.swing.JOptionPane;

/**
 *
 * @author Lynne
 */
public class SaveClues_JFrame extends javax.swing.JFrame {

private ArrayList<String> myColClues;
private ArrayList<String> myRowClues;

/**
 * Creates new form SaveClues_JFrame
 */
public SaveClues_JFrame(ArrayList<String> colClues, ArrayList<String> rowClues,
	String filename) 
{
	myColClues = colClues;
	myRowClues = rowClues;
	int totalCol = GetTotal (myColClues);
	int totalRow = GetTotal (myRowClues);
	initComponents();
	
	if (myColClues == null)
		numColsJLabel.setText ("No column clues");
	else
		numColsJLabel.setText ("Number columns: " + myColClues.size() + " sum: " + totalCol);
	
	if (myRowClues == null)
		numRowsJLabel.setText ("No row clues");
	else
		numRowsJLabel.setText ("Number rows: " + myRowClues.size() + " sum: " + totalRow);
	
	sourceJTextField.setText(filename);
	
	setTitle ("Save Clues to File");
}

private int GetTotal (ArrayList<String> clues)
{
	if (clues == null) return 0;
	int total = 0;
	for (int i=0; i<clues.size(); i++)
	{
		String str = clues.get(i);
		str = ReplaceCRs (str);
		String strs[] = str.split(" ");
		for (int j=0; j<strs.length; j++)
		{
			String s = strs[j];
			try
			{
				int num = Integer.parseInt(s);
				total += num;
			} catch (NumberFormatException nfe)
			{ }
		}
	}
	return total;
}

/**
 * This method is called from within the constructor to initialize the form.
 * WARNING: Do NOT modify this code. The content of this method is always
 * regenerated by the Form Editor.
 */
@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        sourceJTextField = new javax.swing.JTextField();
        numColsJLabel = new javax.swing.JLabel();
        numRowsJLabel = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        startColJTextField = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        startRowJTextField = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Source");

        sourceJTextField.setText("Something to call your puzzle");
        sourceJTextField.setToolTipText("This text will be in the first line of the .pbn file");

        numColsJLabel.setText("Number cols:");

        numRowsJLabel.setText("Number rows:");

        jLabel4.setText("Start col:");

        startColJTextField.setText("0");
        startColJTextField.setToolTipText("Starting column number to use (for file merging)");

        jLabel5.setText("Start row:");

        startRowJTextField.setText("0");
        startRowJTextField.setToolTipText("Starting row number to use (for file merging)");

        jButton1.setText("Save...");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Cancel");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(sourceJTextField))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(startColJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(startRowJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(numColsJLabel)
                            .addComponent(numRowsJLabel))
                        .addGap(0, 112, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(sourceJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(numColsJLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(numRowsJLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(startColJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(startRowJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
		
		// Get starting col and row numbers (make sure they're integers)
		int startCol = 0;
		int startRow = 0;
		try
		{
			if (myColClues != null)
				startCol = Integer.parseInt(startColJTextField.getText());
			if (myRowClues != null)
				startRow = Integer.parseInt(startRowJTextField.getText());
		}
		catch (NumberFormatException nfe)
		{
			JOptionPane.showMessageDialog(this, 
				"Starting col or row is not an integer", "Number Format Error", JOptionPane.OK_OPTION);
			return;
		}
		if (startCol < 0 || startRow < 0)
		{
			JOptionPane.showMessageDialog(this, 
				"Starting col or row is < 0", "Starting Row or Col Error", JOptionPane.OK_OPTION);
			return;
		}
		
		// Make sure source text isn't empty
		String source = sourceJTextField.getText().trim();
		if (source.length() == 0)
		{
			JOptionPane.showMessageDialog(this, 
				"Source is empty", "Source Text Error", JOptionPane.OK_OPTION);
			return;
		}
		
		// Have user select a PBN image
		FileDialog fd = new FileDialog((java.awt.Frame) null, "Choose a text file (.pbn or .txt) to write clues to", FileDialog.SAVE);
		fd.setFilenameFilter (new FilenameFilter ()
		{
			public boolean accept (File f, String name)
			{
				String extension = name.substring(name.lastIndexOf("."));
				if (extension == null) return false;
				extension = extension.toLowerCase();
				if (extension.compareTo (".pbn") == 0 ||
					extension.compareTo (".txt") == 0) return true;
				return false;
			}
		});
		fd.setVisible(true);
		if (fd.getFile() == null) return;
		File f = new File(fd.getDirectory(), fd.getFile());
		
		// Add .pbn if not already at the end of the file name
		if (!f.getName().endsWith (".pbn"))
		{
			File newF = new File (f.getParent(), f.getName() + ".pbn");
			f = newF;
		}
		
		if (WriteCluesToFile (f, myColClues, myRowClues, startCol, startRow))	
		{
			JOptionPane.showMessageDialog(null, "File written!");
			this.dispose();
		}
    }//GEN-LAST:event_jButton1ActionPerformed

	private boolean WriteCluesToFile (File f, ArrayList<String> colClues,
			ArrayList<String> rowClues, int startCol, int startRow)
	{
		try
		{
			FileWriter writer = new FileWriter(f);
			String source = sourceJTextField.getText().trim();
			writer.write ("Source " + source + "\n");
			if (rowClues != null && rowClues.size() > 0)
				writer.write ("Rows " + rowClues.size() + "\n");
			else
				writer.write ("Rows 0\n");
			if (colClues != null && colClues.size() > 0)
				writer.write ("Cols " + colClues.size() + "\n");
			else
				writer.write ("Cols 0\n");
			if (rowClues != null)
			{
				for (int i=0; i<rowClues.size(); i++)
				{
					String row_str = rowClues.get(i).trim();
					writer.write ("Row_clues " + (i+startRow) + " " + CountClues(row_str)
							+ " " + row_str + "\n");
				}
			}
			if (colClues != null)
			{
				for (int i=0; i<colClues.size(); i++)
				{
					String col_str = colClues.get(i).trim();
					col_str = ReplaceCRs (col_str);
					writer.write ("Col_clues " + (i+startCol) + " " + CountClues(col_str) +
							" " + col_str + "\n");
				}
			}
			writer.close();
		}
		catch (IOException ie)
		{
			JOptionPane.showMessageDialog(this, 
				"IOException:\n" + ie.getLocalizedMessage(), "Write Error", JOptionPane.OK_OPTION);
			return false;			
		}
		return true;
	}
	
	private static int CountClues (String str)
	{
		int num = 0;
		String[] tokens = str.split(" ");
		for (int i=0; i<tokens.length; i++)
			if (tokens[i].length() > 0) num++;
		return num;
	}
	
	public static String ReplaceCRs (String str)
	{
		String[] tokens = str.split("\n");
		String new_str = "";
		Boolean first = true;
		for (int i=0; i<tokens.length; i++)
			if (tokens[i].length() > 0)
			{
				if (!first) new_str += " ";
				new_str += tokens[i];
				first = false;
			}
		return new_str;
	}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel numColsJLabel;
    private javax.swing.JLabel numRowsJLabel;
    private javax.swing.JTextField sourceJTextField;
    private javax.swing.JTextField startColJTextField;
    private javax.swing.JTextField startRowJTextField;
    // End of variables declaration//GEN-END:variables
}
